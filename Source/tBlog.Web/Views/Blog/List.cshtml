@using PagedList
@using PagedList.Mvc
@model tBlog.Web.Models.ListViewModel
@{
    if (Model.RouteValues == null)
    {
        Model.RouteValues = new RouteValueDictionary();
    }
}
<section id="@Model.SectionId">
    @if(!String.IsNullOrEmpty(Model.Caption))
    {
        <div class="alert alert-info caption">
            @Html.Raw(Model.Caption)
        </div>
    }
    

    @if (Model.Items.Any())
    {
        foreach (var item in Model.Items)
        {
            @Html.Partial(Model.TemplateName, item)
        }
        
        @Html.PagedListPager((IPagedList)Model.Items, page =>
        {
            Model.RouteValues["page"] = page;
            return Url.Action(Model.ActionName, Model.ControllerName, Model.RouteValues);
        }, new PagedListRenderOptions
        {
            ContainerDivClasses = new List<string> { "pagination", "pagination-centered" }
        })        
        
    }
    else
    {
        <h3>@(Model.EmptyPlaceHolder ?? "Nothing to show")</h3>
    }
</section>
